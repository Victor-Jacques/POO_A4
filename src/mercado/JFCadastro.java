/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mercado;

import java.awt.GridLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import mercado.Metodos;

/**
 *
 * @author Lucas
 */
public class JFCadastro extends javax.swing.JFrame {

    /**
     * Creates new form JFMercado
     */
    private JFRead janelaPrincipal;
    JFRead readFile = new JFRead();
    Metodos util = new Metodos(readFile);

    public JFCadastro(JFRead janelaPrincipal) {
        this.janelaPrincipal = janelaPrincipal; // Armazena a referência
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                // Chama o método mostrar() do frame read
                util.mostrar(janelaPrincipal.JFReadTable);
            }
        });

        initComponents();
        setLocationRelativeTo(null);
        util.mostrar(CadastroTable);

    }

    JFCadastro() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TFnome = new javax.swing.JTextField();
        TFPreco = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        atuaButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CadastroTable = new javax.swing.JTable();
        AtualizarTabela = new javax.swing.JButton();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Nome");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Preco");

        addButton.setText("Adicionar");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        atuaButton.setText("Editar");
        atuaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atuaButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Deletar");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        CadastroTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        CadastroTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Preço", "Quantidade"
            }
        ));
        SwingUtilities.invokeLater(() -> {
            TableColumnModel columnModel = CadastroTable.getColumnModel();
            columnModel.getColumn(0).setPreferredWidth(50);   // Coluna ID
            columnModel.getColumn(1).setPreferredWidth(150);  // Coluna Nome
            columnModel.getColumn(2).setPreferredWidth(100);  // Coluna Valor
            columnModel.getColumn(3).setPreferredWidth(100);  // Coluna Quantidade
        });
        jScrollPane1.setViewportView(CadastroTable);

        AtualizarTabela.setText("Atualizar");
        AtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarTabelaActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        label1.setText("Menu de Cadastro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFnome, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TFPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(38, 38, 38)))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AtualizarTabela)
                .addGap(74, 74, 74)
                .addComponent(deleteButton)
                .addGap(73, 73, 73)
                .addComponent(atuaButton)
                .addGap(94, 94, 94))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TFnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TFPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(addButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AtualizarTabela)
                    .addComponent(deleteButton)
                    .addComponent(atuaButton))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        criar();
        util.mostrar(CadastroTable);
    }//GEN-LAST:event_addButtonActionPerformed

    private void atuaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atuaButtonActionPerformed
        // TODO add your handling code here:
        atualizar();
    }//GEN-LAST:event_atuaButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        excluir();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void AtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarTabelaActionPerformed
        // TODO add your handling code here:
        util.mostrar(readFile.JFReadTable);
    }//GEN-LAST:event_AtualizarTabelaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFCadastro().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AtualizarTabela;
    private javax.swing.JTable CadastroTable;
    private javax.swing.JTextField TFPreco;
    private javax.swing.JTextField TFnome;
    private javax.swing.JButton addButton;
    private javax.swing.JButton atuaButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables

    private void criar() {
        Random random = new Random();
        int id = random.nextInt(1000) + 1;
        id = idEquivalente(id);

        String nome = TFnome.getText();

        // Formata o preço para ter duas casas decimais
        String precoTexto = TFPreco.getText().replace(",", ".");
        if (!precoTexto.contains(".")) {
            precoTexto += ".00"; // Adiciona .00 se não houver separador decimal
        } else if (precoTexto.split("\\.")[1].length() == 0) {
            precoTexto += "00"; // Adiciona 00 se não houver casas decimais
        } else if (precoTexto.split("\\.")[1].length() == 1) {
            precoTexto += "0"; // Adiciona 0 se houver apenas uma casa decimal
        }

        ProdutoCRUD pr = new ProdutoCRUD("arq.txt");
        List<Produto> listP = pr.lerProdutos();
        for (Produto produto : listP) {
            if (produto.getNome().equalsIgnoreCase(nome)) {
                System.err.println("Já existe um produto com o nome: " + nome);
                JOptionPane.showMessageDialog(rootPane, "Já existe um produto com esse nome " + nome);
                return; // Saia do método se o produto já existir
            }
        }

        BigDecimal preco = new BigDecimal(precoTexto);
        int qtd = 0;

        Produto p = new Produto(id, nome, preco, qtd);

        pr.adicionarProduto(p);
        util.mostrar(CadastroTable);
        util.mostrar(readFile.JFReadTable);
        limpa();

    }

    private int idEquivalente(int id) {
        ProdutoCRUD pr = new ProdutoCRUD("arq.txt");
        List<Produto> produtos = pr.lerProdutos();

        for (Produto produto : produtos) {
            if (produto.getId() == id) {
                System.out.println(id);
                Random random = new Random();
                id = random.nextInt(1000) + 1;
                System.out.println(id);
                return idEquivalente(id);
            }
        }
        return id;
    }

    private void atualizar() {
        String valor = "";
        String nome = "";
        int id = 0;
        JTextField idField = new JTextField();
        JTextField nomeField = new JTextField();
        JTextField valorField = new JTextField();

        // Cria um painel para organizar os componentes
        JPanel painel = new JPanel(new GridLayout(3, 3));
        painel.add(new JLabel("Digite o ID do produto"));
        painel.add(idField);
        painel.add(new JLabel("O novo nome do seu produto:"));
        painel.add(nomeField);
        painel.add(new JLabel("Digite o novo valor do produto:"));
        painel.add(valorField);

        // Exibe o painel em um JOptionPane
        int resultado = JOptionPane.showConfirmDialog(null, painel,
                "Informações do Produto", JOptionPane.OK_CANCEL_OPTION);

        // Verifica se o usuário clicou em OK
        if (resultado == JOptionPane.OK_OPTION) {
            String strid = idField.getText();
            nome = nomeField.getText();
            valor = valorField.getText();

            id = Integer.parseInt(strid);
        } else {
            System.out.println("Operação cancelada.");
            return; // Sai do método se cancelado
        }

        ProdutoCRUD pr = new ProdutoCRUD("arq.txt");
        List<Produto> produtos = pr.lerProdutos();
        Produto p2 = new Produto(0, "0", BigDecimal.ZERO, 0);

        for (Produto p : produtos) {
            if (id != 0 && p.getId() == id) {
                p2 = p;
                break; // Encerra o loop se encontrou o produto
            }
        }

        if (!"".equals(nome)) {
            p2.setNome(nome);
        }

        if (!"".equals(valor)) {
            valor = valorField.getText().replace(",", ".");
            try {
                p2.setPreco(new BigDecimal(valor));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Formato de valor inválido. Por favor, use um número decimal.");
                return;
            }
        }

        pr.atualizarProduto(id, p2);
        util.mostrar(CadastroTable);
        limpa();
    }

    private void excluir() {

        int id = 0;

        JTextField idField = new JTextField();

        JPanel painel = new JPanel(new GridLayout(3, 3));
        painel.add(new JLabel("Digite o ID do produto"));
        painel.add(idField);

        int resultado = JOptionPane.showConfirmDialog(null, painel,
                "Informações Pessoais", JOptionPane.OK_CANCEL_OPTION);

        if (resultado == JOptionPane.OK_OPTION) {
            String strid = idField.getText();

            id = Integer.parseInt(strid);
        } else {
            System.out.println("Operação cancelada.");
        }

        ProdutoCRUD pr = new ProdutoCRUD("arq.txt");

        if (id != 0) {
            pr.excluirProduto(id);
        }

        util.mostrar(CadastroTable);
        limpa();
    }

    private void limpa() {
        TFnome.setText("");
        TFPreco.setText("");
    }

}
